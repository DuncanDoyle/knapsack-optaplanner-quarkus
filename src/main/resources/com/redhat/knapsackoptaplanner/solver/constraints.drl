package com.redhat.knapsackoptaplanner.solver;

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;
import com.redhat.knapsackoptaplanner.domain.Ingot;
import com.redhat.knapsackoptaplanner.domain.Knapsack;

global HardSoftScoreHolder scoreHolder;

rule "Max Weight"
when
    Knapsack($maxWeight: maxWeight)
    accumulate(
        Ingot(selected == true, $weight: weight);
        $totalWeight : sum($weight);
        $totalWeight > $maxWeight
    )
    Ingot(selected == true)
    
then
    scoreHolder.penalize(kcontext, $totalWeight - $maxWeight);
end


rule "Max Value"
when
    Ingot(selected == true, $value: value)
then
    scoreHolder.reward(kcontext, $value);
end